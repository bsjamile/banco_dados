/* PRIMEIRA FORMA NORMAL */

 /* COLUNAS = CAMPOS, LINHAS = REGISTROS
 
 1 - TODO CAMPO VETORIZADO (ELEMENTOS DA MESMA FAMILIA) SE TORNARA OUTRA TABELA = NESSE EXEMPLO, O TELEFONE
 
 [AMARELO, AZUL, LARANJA, VERDE] -> CORES
 [KA, FIESTA, UNO, CIVIC] -> CARROS
 
 2 - TODO CAMPO MULTIVALORADO SE TORNARA OUTRA TABELA
 QUANDO O CAMPO FOR DIVISIVEL (ELEMENTOS DE FAMILIA DIFERENTE) = NESSE EXEMPLO, O ENDERECO
 
 3 - TODA TABELA NECESSITA DE PELO MENOS UM CAMPO QUE IDENTIFIQUE 
 TODO O REGISTRO COMO SENDO UNICO.
 ISSO É O QUE CHAMAMOS DE PRIMARY KEY
 
 */
 
 /* CARDINALIDADE */
 
 /* QUEM DEFINE A CARDINALIDADE É A REGRA DE NEGÓCIOS */

/* 

 PRIMEIRO ALGORISMO - OBRIGATORIEDADE
 0 - NAO OBRIGATÓRIO
 N - OBRIGATÓRIO
 
 SEGUNDO ALGORISMO - CARDINALIDADE
 1 - MAXIMO DE UM
 N - MAIS DE UM
 
 LÊ-SE DE ACORDO COM O SEGUNDO ALGORISMO 
 1,1 = 1 PRA 1
 1,N = 1 PRA MUITOS
 
 */
 
 CREATE DATABASE COMERCIO;
 
 USE COMERCIO;
 
 SHOW DATABASES;
 
 CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL, /*O ENUM SO EXISTE NO MYSQL*/
	EMAIL VARCHAR(50) UNIQUE,
	CPF VARCHAR(15) UNIQUE 
 );
 
 --UNIQUE = AQUI O UNIQUE DEFINE O RELACIONAMENTO 1 X 1
 
 CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,

	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
 );
 
 CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('RES', 'COM', 'CEL') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT,

	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
 );
 
 DROP TABLE CLIENTE;
 
 /* 
	ENDERECO - OBRIGATORIO
	CADASTRO DE SOMENTE UM.
	
	TELEFONE - NAO OBRIGATORIO
	CADASTRO DE MAIS DE UM (OPCIONAL)
 */
 
 /* FOREIGN KEY */
 
 /*
	CHAVE ESTRANGEIRA É A CHAVE PRIMARIA DE UMA TABELA
	QUE VAI ATÉ A OUTRA TABELA PARA FAZER REFERENCIA ENTRE
	REGISTROS
 */
 
/* TABELA MAIS FRACA OU MAIS FORTE DEPENDE DA REGRA DE NEGOCIO */
	
/* EM RELACIONAMENTO 1 X 1 A CHAVE ESTRANGEIRA FICA NA TABELA MAIS FRACA */

/* EM RELACIONAMENTO 1 X N A CHAVE ESTRANGEIRA FICARA SEMPRE NA CARDINAALIDADE N */

/* CONSTRAINT = REGRA */

DESC CLIENTE;

/* NO CASO DO MYSQL PRECISA INDICAR COM NULL AINDA QUE O ID SEJA AUTOINCREMENTADO*/

INSERT INTO CLIENTE VALUES(NULL,'JOAO', 'M','JOAO@IG.COM','012.345.678-90');

DELETE FROM CLIENTE WHERE NOME = 'JOAO';

SELECT * FROM CLIENTE;

INSERT INTO CLIENTE VALUES(NULL,'CARLOS', 'M','CARLOS@IG.COM','455878781');
INSERT INTO CLIENTE VALUES(NULL,'ANA', 'F','ANA@IG.COM','65654564654');
INSERT INTO CLIENTE VALUES(NULL,'CLARA', 'F',NULL,'200651651');
INSERT INTO CLIENTE VALUES(NULL,'JORGE', 'M','JORGE@IG.COM','8489798494');
INSERT INTO CLIENTE VALUES(NULL,'CELIA', 'F','CELIA@IG.COM','54098798740');


+-----------+--------+------+---------------+----------------+
| IDCLIENTE | NOME   | SEXO | EMAIL         | CPF            |
+-----------+--------+------+---------------+----------------+
|         2 | JOAO   | M    | JOAO@IG.COM   | 012.345.678-90 |
|         3 | ANA    | F    | ANA@IG.COM    | 65654564654    |
|         4 | CLARA  | F    | NULL          | 200651651      |
|         5 | JORGE  | M    | JORGE@IG.COM  | 8489798494     |
|         6 | CELIA  | F    | CELIA@IG.COM  | 54098798740    |
|         7 | CARLOS | M    | CARLOS@IG.COM | 455878781      |
+-----------+--------+------+---------------+----------------+

/* O BANCO NAO CONTROLA A OBRIGATORIEDADE */

DESC ENDERECO;

INSERT INTO ENDERECO VALUES(NULL,'RUA ANTONIO SA', 'CENTRO', 'B. HORIZONTE','MG',4);
INSERT INTO ENDERECO VALUES(NULL,'RUA CAPITAO HERMES', 'CENTRO', 'RIO DE JANEIRO','RJ',2);
INSERT INTO ENDERECO VALUES(NULL,'RUA PRES VARGAS', 'JARDINS', 'SAO PAULO','SP',3);
INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA', 'ESTACIO', 'RIO DE JANEIRO','RJ',7);
INSERT INTO ENDERECO VALUES(NULL,'RUA DO OUVIDOR', 'FLAMENGO', 'RIO DE JANEIRO','RJ',6);
INSERT INTO ENDERECO VALUES(NULL,'RUA URUGUAIANA', 'CENTRO', 'VITORIA','ES',5);


INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA', 'CENTRO', 'SAO PAULO','SP',5);

SELECT * FROM ENDERECO;

/* EM RELACIONAMENO 1 X 1 A FK NAO SE REPETE (UNIQUE) */

DESC TELEFONE;

/* NOS OUTROS BANCOS DE DADOS NAO PRECISAMOS COLOCAR NULL NO CAMPO DE ID AUTONCREMENTAVEL*/

INSERT INTO TELEFONE VALUES(NULL,'CEL','789787987',5);

SELECT * FROM TELEFONE;

INSERT INTO TELEFONE VALUES(NULL,'CEL','789787987',5);
INSERT INTO TELEFONE VALUES(NULL,'RES','545451211',5);
INSERT INTO TELEFONE VALUES(NULL,'CEL','989898989',2);
INSERT INTO TELEFONE VALUES(NULL,'COM','554555455',2);
INSERT INTO TELEFONE VALUES(NULL,'RES','878787211',3);
INSERT INTO TELEFONE VALUES(NULL,'CEL','121212055',2);
INSERT INTO TELEFONE VALUES(NULL,'CEL','598989889',3);
INSERT INTO TELEFONE VALUES(NULL,'COM','212250540',2);
INSERT INTO TELEFONE VALUES(NULL,'RES','787875421',5);
INSERT INTO TELEFONE VALUES(NULL,'CEL','545878785',5);

/* SELECAO, PROJECAO E JUNCAO */

/* PROJECAO -> É TUDO QUE VOCE QUER VER NA TELA */

SELECT NOW() AS DATA_ATUAL;

SELECT 2 + 2 AS SOMA;

SELECT 2 + 2 AS SOMA, NOME AS NAME, NOW() AS DATA_E_HORA
FROM CLIENTE;

/* SELECAO -> É UM SUBCONJUNTO DO CONJUNTO TOTAL DE REGISTROS DE UMA TABELA
A CLAUSULA DE SELECAO É O WHERE
*/

SELECT NOME, SEXO, EMAIL /* PROJECAO */
FROM CLIENTE /* ORIGEM */
WHERE SEXO = 'F'; /* SELECAO */

SELECT NUMERO, TIPO /* PROJECAO */
FROM TELEFONE /* ORIGEM */
WHERE TIPO = 'CEL'; /* SELECAO */

/* NO ORACLE É OBRIGATÓRIO A TER ORIGEM. ENTAO O SELECT NOW(); NÃO FUNCIONA, POR EXEMPLO */

/* NO MYSQL É GARANTIDO TER A SELECAO */

/* NO ORACLE SEMPRE TERÁ A PROJECAO E A ORIGEM */

/* JUNCAO -> JOIN */

SELECT NOME, EMAIL, IDCLIENTE
FROM CLIENTE;

SELECT ID_CLIENTE, BAIRRO, CIDADE
FROM ENDERECO;

+--------+---------------+-----------+
| NOME   | EMAIL         | IDCLIENTE |
+--------+---------------+-----------+
| JOAO   | JOAO@IG.COM   |         2 |
| ANA    | ANA@IG.COM    |         3 |
| CLARA  | NULL          |         4 |
| JORGE  | JORGE@IG.COM  |         5 |
| CELIA  | CELIA@IG.COM  |         6 |
| CARLOS | CARLOS@IG.COM |         7 |
+--------+---------------+-----------+

+------------+----------+----------------+
| ID_CLIENTE | BAIRRO   | CIDADE         |
+------------+----------+----------------+
|          4 | CENTRO   | B. HORIZONTE   |
|          2 | CENTRO   | RIO DE JANEIRO |
|          3 | JARDINS  | SAO PAULO      |
|          7 | ESTACIO  | RIO DE JANEIRO |
|          6 | FLAMENGO | RIO DE JANEIRO |
|          5 | CENTRO   | VITORIA        |
+------------+----------+----------------+

/* NOME, SEXO, BAIRRO, CIDADE */

/* NAO USAR O WHERE PARA JOIN */

SELECT NOME, SEXO, BAIRRO, CIDADE /* PROJECAO */
FROM CLIENTE, ENDERECO /* ORIGEM */
WHERE IDCLIENTE = ID_CLIENTE; /* JUNCAO */

+--------+------+----------+----------------+
| NOME   | SEXO | BAIRRO   | CIDADE         |
+--------+------+----------+----------------+
| JOAO   | M    | CENTRO   | RIO DE JANEIRO |
| ANA    | F    | JARDINS  | SAO PAULO      |
| CLARA  | F    | CENTRO   | B. HORIZONTE   |
| JORGE  | M    | CENTRO   | VITORIA        |
| CELIA  | F    | FLAMENGO | RIO DE JANEIRO |
| CARLOS | M    | ESTACIO  | RIO DE JANEIRO |
+--------+------+----------+----------------+

/* WHERE = SELECAO */

/* NAO USAR O WHERE PARA JOIN */

SELECT NOME, SEXO, BAIRRO, CIDADE
FROM CLIENTE, ENDERECO 
WHERE IDCLIENTE = ID_CLIENTE
AND SEXO = 'F';

+-------+------+----------+----------------+
| NOME  | SEXO | BAIRRO   | CIDADE         |
+-------+------+----------+----------------+
| ANA   | F    | JARDINS  | SAO PAULO      |
| CLARA | F    | CENTRO   | B. HORIZONTE   |
| CELIA | F    | FLAMENGO | RIO DE JANEIRO |
+-------+------+----------+----------------+

/* WHERE IDCLIENTE = ID_CLIENTE
AND SEXO = 'F'; -> TABELA VERDADE */

SELECT NOME, SEXO, BAIRRO, CIDADE /* PROJECAO */
FROM CLIENTE /* ORIGEM */
	INNER JOIN ENDERECO /* JUNCAO */
	ON IDCLIENTE = ID_CLIENTE
WHERE SEXO = 'F'; /* SELECAO */

/* NOME, SEXO, EMAIL, TIPO, NUMERO */

SELECT NOME, SEXO, EMAIL, TIPO, NUMERO /* SELECAO */
FROM CLIENTE /* ORIGEM */
INNER JOIN TELEFONE /* JUNCAO*/
ON IDCLIENTE = ID_CLIENTE;

/* NOME, SEXO, BAIRRO, CIDADE, TIPO, NUMERO */

SELECT CLIENTE.NOME, CLIENTE.SEXO, ENDERECO.BAIRRO, ENDERECO.CIDADE, TELEFONE.TIPO, TELEFONE.NUMERO
FROM CLIENTE
INNER JOIN ENDERECO
ON CLIENTE.IDCLIENTE = ENDERECO.ID_CLIENTE
INNER JOIN TELEFONE
ON CLIENTE.IDCLIENTE = TELEFONE.ID_CLIENTE;

/* VOCE PODE JUNTAR QUANTAS TABELAS PRECISAR. O USO DA CLAUSULA JOIN É IRRESTRITO, 
LOGICAMENTE DEPENDENDO DO PROCESSAMENTO */

+-------+------+---------+----------------+------+-----------+
| NOME  | SEXO | BAIRRO  | CIDADE         | TIPO | NUMERO    |
+-------+------+---------+----------------+------+-----------+
| JOAO  | M    | CENTRO  | RIO DE JANEIRO | CEL  | 989898989 |
| JOAO  | M    | CENTRO  | RIO DE JANEIRO | COM  | 554555455 |
| JOAO  | M    | CENTRO  | RIO DE JANEIRO | CEL  | 121212055 |
| JOAO  | M    | CENTRO  | RIO DE JANEIRO | COM  | 212250540 |
| ANA   | F    | JARDINS | SAO PAULO      | RES  | 878787211 |
| ANA   | F    | JARDINS | SAO PAULO      | CEL  | 598989889 |
| JORGE | M    | CENTRO  | VITORIA        | CEL  | 789787987 |
| JORGE | M    | CENTRO  | VITORIA        | CEL  | 789787987 |
| JORGE | M    | CENTRO  | VITORIA        | RES  | 545451211 |
| JORGE | M    | CENTRO  | VITORIA        | RES  | 787875421 |
| JORGE | M    | CENTRO  | VITORIA        | CEL  | 545878785 |
+-------+------+---------+----------------+------+-----------+

/* O USO DE APELIDOS OU NOMES DAS TABELAS PARA PONTEIRAMENTO AUMENTA A PERFORMANCE */

SELECT C.NOME, C.SEXO, E.BAIRRO, E.CIDADE, T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+-------+------+---------+----------------+------+-----------+
| NOME  | SEXO | BAIRRO  | CIDADE         | TIPO | NUMERO    |
+-------+------+---------+----------------+------+-----------+
| JOAO  | M    | CENTRO  | RIO DE JANEIRO | CEL  | 989898989 |
| JOAO  | M    | CENTRO  | RIO DE JANEIRO | COM  | 554555455 |
| JOAO  | M    | CENTRO  | RIO DE JANEIRO | CEL  | 121212055 |
| JOAO  | M    | CENTRO  | RIO DE JANEIRO | COM  | 212250540 |
| ANA   | F    | JARDINS | SAO PAULO      | RES  | 878787211 |
| ANA   | F    | JARDINS | SAO PAULO      | CEL  | 598989889 |
| JORGE | M    | CENTRO  | VITORIA        | CEL  | 789787987 |
| JORGE | M    | CENTRO  | VITORIA        | CEL  | 789787987 |
| JORGE | M    | CENTRO  | VITORIA        | RES  | 545451211 |
| JORGE | M    | CENTRO  | VITORIA        | RES  | 787875421 |
| JORGE | M    | CENTRO  | VITORIA        | CEL  | 545878785 |
+-------+------+---------+----------------+------+-----------+

/* 
	SQL É UMA LINGUAGEM DE 4ª GERACAO = É MUITO PARECIDA COM A LINGUAGEM HUMANA

	DML - DATA MANIPULATION LANGUAGE = MANIPULACAO DOS DADOS = IUD
		INSERT
		UPDATE
		DELETE
*/
	
/* INSERT */

INSERT INTO CLIENTE VALUES(NULL, 'PAULA','M', NULL, '77437493');
INSERT INTO ENDERECO VALUES(NULL, 'RUA JOAQUIM SILVA', 'ALVORADA', 'NITEROI','RJ',8);

SELECT * FROM CLIENTE;

/* FILTROS */

SELECT * FROM CLIENTE
WHERE SEXO = 'M';

/* UPDATE */

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 8;

UPDATE CLIENTE
SET SEXO = 'F'
WHERE IDCLIENTE = 8;

/* DELETE */

INSERT INTO CLIENTE VALUES(NULL, 'XXXX','M', NULL, 'XXXXXXXX');

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 9;

DELETE FROM CLIENTE
WHERE IDCLIENTE = 9;

/*
	DDL - DATA DEFINITION LANGUAGE = DEFINICAO DOS DADOS = TIPAGEM DOS DADOS = CAD
	TUDO FEITO EM RELACAO A UMA TABELA QUE DIZ RESPEITO AO TIPO, ELE É O PADRAO DE DDL
		CREATE
		ALTER
		DROP
*/

/* CREATE */
/* O AUTO_INCREMENT SÓ EXISTE NO MYSQL */

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME_PRODUTO VARCHAR(30) NOT NULL,
	PRECO INT,
	FRETE FLOAT(10,2) NOT NULL
);

/* ALTER TABLE */

/* ALTERANDO O NOME DE UMA COLUNA - CHANGE */

/* CHANGE = MUDA O NOME E O TIPO */
ALTER TABLE PRODUTO
CHANGE PRECO VALOR_UNITARIO INT NOT NULL;

DESC PRODUTO;

+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDPRODUTO      | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME_PRODUTO   | varchar(30) | NO   |     | NULL    |                |
| VALOR_UNITARIO | int(11)     | NO   |     | NULL    |                |
| FRETE          | float(10,2) | NO   |     | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+

ALTER TABLE PRODUTO
CHANGE VALOR_UNITARIO VALOR_UNITARIO INT;

DESC PRODUTO;

+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDPRODUTO      | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME_PRODUTO   | varchar(30) | NO   |     | NULL    |                |
| VALOR_UNITARIO | int(11)     | YES  |     | NULL    |                |
| FRETE          | float(10,2) | NO   |     | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+

/* MODIFY */

/* CHANGE E MODIFY FAZEM A MESMA COISA*/

/* ALTERANDO O TIPO */

ALTER TABLE PRODUTO
MODIFY VALOR_UNITARIO VARCHAR(50) NOT NULL;

ALTER TABLE PRODUTO
CHANGE VALOR_UNITARIO VALOR_UNITARIO INT;

/* O MAIS SEGURO É UTILIZAR O CHANGE PARA ALTERAR O NOME DA COLUNA
E O MODIFY PARA ALTERAR TIPO */

/* ADICIONA COLUNAS */

/* SE ESQUECER DE CRIAR UMA TABELA, POR EXEMPLO, NAO É PARA ALERAR LOKAMENTE COM ALTER TABLE
E SIM DROPAR, DELETAR E CRIAR NOVAMENTE = MAIS PROFISSIONAL */

ALTER TABLE PRODUTO
ADD PESO FLOAT(10,2) NOT NULL;

DESC PRODUTO;

/* APAGANDO UMA COLUNA */

ALTER TABLE PRODUTO
DROP COLUMN PESO;

/* O MYSQL É UM DOS POUCOS BANCOS QUE DEIXA VC ALTERAR A ORDEM DAS COLUNAS AO ADICIONAR UMA NOVA COLUNA */

/* ADICIONANDO UMA COLUNA NAA ORDEM ESPECIFICA */

ALTER TABLE PRODUTO
ADD COLUMN PESO FLOAT(10,2) NOT NULL
AFTER NOME_PRODUTO;

ALTER TABLE PRODUTO
DROP COLUMN PESO;

ALTER TABLE PRODUTO
ADD COLUMN PESO FLOAT(10,2) NOT NULL
FIRST;

/* EXERCICIOS DML */

INSERT INTO CLIENTE VALUES(NULL,'FLAVIO','M','FLAVIO@IG.COM','4657765');
INSERT INTO CLIENTE VALUES(NULL,'ANDRE','M','ANDRE@GLOBO.COM','7687567');
INSERT INTO CLIENTE VALUES(NULL,'GIOVANA','F',NULL,'0876655');
INSERT INTO CLIENTE VALUES(NULL,'KARLA','M','KARLA@GMAIL.COM','545676778');
INSERT INTO CLIENTE VALUES(NULL,'DANIELE','M','DANIELE@GMAIL.COM','43536789');
INSERT INTO CLIENTE VALUES(NULL,'LORENA','M',NULL,'774557887');
INSERT INTO CLIENTE VALUES(NULL,'EDUARDO','M',NULL,'54376457');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','F','ANTONIO@IG.COM','12436767');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','M','ANTONIO@UOL.COM','3423565');
INSERT INTO CLIENTE VALUES(NULL,'ELAINE','M','ELAINE@GLOBO.COM','32567763');
INSERT INTO CLIENTE VALUES(NULL,'CARMEM','M','CARMEM@IG.COM','787832213');
INSERT INTO CLIENTE VALUES(NULL,'ADRIANA','F','ADRIANA@GMAIL.COM','88556942');
INSERT INTO CLIENTE VALUES(NULL,'JOICE','F','JOICE@GMAIL.COM','55412256');
INSERT INTO CLIENTE VALUES(NULL,'JAMILE','F','JAM@GMAIL.COM','55417777');

/* CADASTRE UM ENDERECO PARA CADA CLIENTE */

INSERT INTO ENDERECO VALUES(NULL,'RUA GUEDES','CASCADURA','B. HORIZONTE','MG',11);
INSERT INTO ENDERECO VALUES(NULL,'RUA MAIA LACERDA','ESTACIO','RIO DE JANEIRO','RJ',12);
INSERT INTO ENDERECO VALUES(NULL,'RUA VISCONDESSA','CENTRO','RIO DE JANEIRO','RJ',13);
INSERT INTO ENDERECO VALUES(NULL,'RUA NELSON MANDELA','COPACABANA','RIO DE JANEIRO','RJ',14);
INSERT INTO ENDERECO VALUES(NULL,'RUA ARAUJO LIMA','CENTRO','VITORIA','ES',15);
INSERT INTO ENDERECO VALUES(NULL,'RUA CASTRO ALVES','LEBLON','RIO DE JANEIRO','RJ',16);
INSERT INTO ENDERECO VALUES(NULL,'AV CAPITAO ANTUNES','CENTRO','CURITIBA','PR',17);
INSERT INTO ENDERECO VALUES(NULL,'AV CARLOS BARROSO','JARDINS','SAO PAULO','SP',18);
INSERT INTO ENDERECO VALUES(NULL,'ALAMEDA SAMPAIO','BOM RETIRO','CURITIBA','PR',19);
INSERT INTO ENDERECO VALUES(NULL,'RUA DA LAPA','LAPA','SAO PAULO','SP',20);
INSERT INTO ENDERECO VALUES(NULL,'RUA GERONIMO','CENTRO','RIO DE JANEIRO','RJ',21);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',22);
INSERT INTO ENDERECO VALUES(NULL,'RUA LEO','CENTRO','RIO DE JANEIRO','RJ',24);

/* CADASTRE TELEFONES PARA OS CLIENTES */


INSERT INTO TELEFONE VALUES(NULL,'RES','68976565',11);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99656675',11);
INSERT INTO TELEFONE VALUES(NULL,'CEL','33567765',12);
INSERT INTO TELEFONE VALUES(NULL,'CEL','88668786',12);
INSERT INTO TELEFONE VALUES(NULL,'COM','55689654',12);
INSERT INTO TELEFONE VALUES(NULL,'COM','88687979',13);
INSERT INTO TELEFONE VALUES(NULL,'CEL','88587979',13);
INSERT INTO TELEFONE VALUES(NULL,'COM','88965676',14);
INSERT INTO TELEFONE VALUES(NULL,'CEL','89966809',16);
INSERT INTO TELEFONE VALUES(NULL,'COM','88679978',17);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99655768',18);
INSERT INTO TELEFONE VALUES(NULL,'RES','89955665',19);
INSERT INTO TELEFONE VALUES(NULL,'RES','77455786',20);
INSERT INTO TELEFONE VALUES(NULL,'RES','89766554',20);
INSERT INTO TELEFONE VALUES(NULL,'RES','77755785',21);
INSERT INTO TELEFONE VALUES(NULL,'COM','44522578',21);
INSERT INTO TELEFONE VALUES(NULL,'CEL','44522578',22);

/*
	RELATORIO GERAL DE TODOS OS CLIENTES
*/

DESC CLIENTE;

+-----------+---------------+------+-----+---------+----------------+
| Field     | Type          | Null | Key | Default | Extra          |
+-----------+---------------+------+-----+---------+----------------+
| IDCLIENTE | int(11)       | NO   | PRI | NULL    | auto_increment |
| NOME      | varchar(30)   | NO   |     | NULL    |                |
| SEXO      | enum('M','F') | NO   |     | NULL    |                |
| EMAIL     | varchar(50)   | YES  | UNI | NULL    |                |
| CPF       | varchar(15)   | YES  | UNI | NULL    |                |
+-----------+---------------+------+-----+---------+----------------+

DESC ENDERECO;

+------------+-------------+------+-----+---------+----------------+
| Field      | Type        | Null | Key | Default | Extra          |
+------------+-------------+------+-----+---------+----------------+
| IDENDERECO | int(11)     | NO   | PRI | NULL    | auto_increment |
| RUA        | varchar(30) | NO   |     | NULL    |                |
| BAIRRO     | varchar(30) | NO   |     | NULL    |                |
| CIDADE     | varchar(30) | NO   |     | NULL    |                |
| ESTADO     | char(2)     | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)     | YES  | UNI | NULL    |                |
+------------+-------------+------+-----+---------+----------------+

DESC TELEFONE;

+------------+-------------------------+------+-----+---------+----------------+
| Field      | Type                    | Null | Key | Default | Extra          |
+------------+-------------------------+------+-----+---------+----------------+
| IDTELEFONE | int(11)                 | NO   | PRI | NULL    | auto_increment |
| TIPO       | enum('RES','COM','CEL') | NO   |     | NULL    |                |
| NUMERO     | varchar(10)             | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)                 | YES  | MUL | NULL    |                |
+------------+-------------------------+------+-----+---------+----------------+


SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF, 
		E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO, 
		T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE; 


/*
	RELATORIO DE HOMENS
*/

SELECT IDCLIENTE, NOME, SEXO, EMAIL, CPF
FROM CLIENTE
WHERE SEXO = 'M';

SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF, 
		E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO, 
		T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE C.SEXO = 'M';

/* DML -> IDCLIENTE = 14 15 16 20 21 */

SELECT IDCLIENTE, NOME, SEXO
FROM CLIENTE
WHERE IDCLIENTE = 14
OR IDCLIENTE = 15
OR IDCLIENTE = 16
OR IDCLIENTE = 20
OR IDCLIENTE = 21;

SELECT IDCLIENTE, NOME, SEXO FROM CLIENTE
WHERE IDCLIENTE IN (14,15,16,20,21);

UPDATE CLIENTE
SET SEXO = 'F'
WHERE IDCLIENTE IN (14,15,16,20,21);

/*
	RELATORIO DE MULHERES
*/

SELECT IDCLIENTE, NOME, SEXO, EMAIL, CPF
FROM CLIENTE
WHERE SEXO = 'F';

SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF, 
		E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO, 
		T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE C.SEXO = 'F';

/* DDL - ALTERANDO O SEXO DE ANTONIO IDCLIENTE 18*/

SELECT IDCLIENTE, NOME, SEXO
FROM CLIENTE
WHERE IDCLIENTE = 18;

UPDATE CLIENTE
SET SEXO = 'M'
WHERE IDCLIENTE = 18;


/*
	QUANTIDADE DE HOMENS E MULHERES
*/

SELECT COUNT(*) AS 'QTD MULHERES' 
FROM CLIENTE 
WHERE SEXO = 'F';

SELECT COUNT(*) AS 'QTD HOMENS' 
FROM CLIENTE 
WHERE SEXO = 'M';

SELECT SEXO, COUNT(*) AS 'QTD' 
FROM CLIENTE 
GROUP BY SEXO;

+------+-----+
| SEXO | QTD |
+------+-----+
| M    |   8 |
| F    |  13 |
+------+-----+

/*
	IDS E EMAIL DAS MULHERES QUE MOREM NO CENTRO DO RIO DE JANEIRO E
	NAO TENHAM CELULAR 
*/

SELECT * FROM CLIENTE;

SELECT * FROM ENDERECO;

SELECT * FROM TELEFONE;

/* MULHERES QUE MORAM NO CENTRO DO RIO = 5*/

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, E.BAIRRO, E.ESTADO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO'
AND ESTADO = 'RJ';

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, E.BAIRRO, E.ESTADO, T.TIPO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO'
AND ESTADO = 'RJ'
AND (TIPO = 'RES' OR TIPO = 'COM');

/* PARA UMA CAMPANHA DE MARKETING, O SETOR SOLICITOU UM
RELATÓRIO COM O NOME, EMAIL E TELEFONE CELULAR DOS CLIENTES
QUE MORAM NO ESTADO DO RIO DE JANEIRO
VOCÊ TERÁ QUE PASSAR A QUERY PARA GERAR O RELATORIO PARA O PROGRAMADOR */

SELECT * FROM TELEFONE;

SELECT C.NOME, C.EMAIL, T.NUMERO, T.TIPO, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT C.NOME, C.EMAIL, T.NUMERO AS CELULAR /* PROJECAO */
FROM CLIENTE C /* ORIGEM */
INNER JOIN TELEFONE T /* JUNCAO */
ON C.IDCLIENTE = T.ID_CLIENTE /* JUNCAO CONDICAO */
INNER JOIN ENDERECO E /* JUNCAO */
ON C.IDCLIENTE = E.ID_CLIENTE /* JUNCAO CONDICAO */
WHERE ESTADO = 'RJ'AND TIPO = 'CEL'; /* SELECAO */

/*
PARA UMA CAMPANHA DE PRODUTOS DE BELEZA, O COMERCIAL SOLICITOU UM
RELATÓRIO COM O NOME, EMAIL E TELEFONE CELULAR
DAS MULHERES QUE MORAM NO ESADO DE SÃO PAULO
VOCÊ TERÁ QUE PASSAR A QUERY PARA GERAR O RELATÓRIO PARA
O PROGRAMADOR
*/

SELECT C.NOME, C.EMAIL, T.NUMERO, T.TIPO, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE SEXO = 'F'
AND ESTADO = 'SP';

SELECT C.NOME, C.EMAIL, T.NUMERO AS CELULAR
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE ESTADO = 'SP'
AND TIPO = 'CEL'
AND SEXO = 'F';

/* FUNCAO IFNULL(); */

/* NOME, EMAIL, NUMERO, ESTADO */

SELECT C.NOME, C.EMAIL, E.ESTADO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+---------+-------------------+--------+-----------+
| NOME    | EMAIL             | ESTADO | NUMERO    |
+---------+-------------------+--------+-----------+
| JORGE   | JORGE@IG.COM      | ES     | 789787987 |
| JORGE   | JORGE@IG.COM      | ES     | 789787987 |
| JORGE   | JORGE@IG.COM      | ES     | 545451211 |
| JOAO    | JOAO@IG.COM       | RJ     | 989898989 |
| JOAO    | JOAO@IG.COM       | RJ     | 554555455 |
| ANA     | ANA@IG.COM        | SP     | 878787211 |
| JOAO    | JOAO@IG.COM       | RJ     | 121212055 |
| ANA     | ANA@IG.COM        | SP     | 598989889 |
| JOAO    | JOAO@IG.COM       | RJ     | 212250540 |
| JORGE   | JORGE@IG.COM      | ES     | 787875421 |
| JORGE   | JORGE@IG.COM      | ES     | 545878785 |
| FLAVIO  | FLAVIO@IG.COM     | MG     | 68976565  |
| FLAVIO  | FLAVIO@IG.COM     | MG     | 99656675  |
| ANDRE   | ANDRE@GLOBO.COM   | RJ     | 33567765  |
| ANDRE   | ANDRE@GLOBO.COM   | RJ     | 88668786  |
| ANDRE   | ANDRE@GLOBO.COM   | RJ     | 55689654  |
| GIOVANA | NULL              | RJ     | 88687979  |
| KARLA   | KARLA@GMAIL.COM   | RJ     | 88965676  |
| LORENA  | NULL              | RJ     | 89966809  |
| EDUARDO | NULL              | PR     | 88679978  |
| ANTONIO | ANTONIO@IG.COM    | SP     | 99655768  |
| ANTONIO | ANTONIO@UOL.COM   | PR     | 89955665  |
| ELAINE  | ELAINE@GLOBO.COM  | SP     | 77455786  |
| ELAINE  | ELAINE@GLOBO.COM  | SP     | 89766554  |
| CARMEM  | CARMEM@IG.COM     | RJ     | 77755785  |
| CARMEM  | CARMEM@IG.COM     | RJ     | 44522578  |
| ADRIANA | ADRIANA@GMAIL.COM | RJ     | 44522578  |
| GIOVANA | NULL              | RJ     | 88587979  |
+---------+-------------------+--------+-----------+

SELECT C.NOME, 
		IFNULL(C.EMAIL, '********'), 
		E.ESTADO, 
		T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+---------+-----------------------------+--------+-----------+
| NOME    | IFNULL(C.EMAIL, '********') | ESTADO | NUMERO    |
+---------+-----------------------------+--------+-----------+
| JORGE   | JORGE@IG.COM                | ES     | 789787987 |
| JORGE   | JORGE@IG.COM                | ES     | 789787987 |
| JORGE   | JORGE@IG.COM                | ES     | 545451211 |
| JOAO    | JOAO@IG.COM                 | RJ     | 989898989 |
| JOAO    | JOAO@IG.COM                 | RJ     | 554555455 |
| ANA     | ANA@IG.COM                  | SP     | 878787211 |
| JOAO    | JOAO@IG.COM                 | RJ     | 121212055 |
| ANA     | ANA@IG.COM                  | SP     | 598989889 |
| JOAO    | JOAO@IG.COM                 | RJ     | 212250540 |
| JORGE   | JORGE@IG.COM                | ES     | 787875421 |
| JORGE   | JORGE@IG.COM                | ES     | 545878785 |
| FLAVIO  | FLAVIO@IG.COM               | MG     | 68976565  |
| FLAVIO  | FLAVIO@IG.COM               | MG     | 99656675  |
| ANDRE   | ANDRE@GLOBO.COM             | RJ     | 33567765  |
| ANDRE   | ANDRE@GLOBO.COM             | RJ     | 88668786  |
| ANDRE   | ANDRE@GLOBO.COM             | RJ     | 55689654  |
| GIOVANA | ********                    | RJ     | 88687979  |
| KARLA   | KARLA@GMAIL.COM             | RJ     | 88965676  |
| LORENA  | ********                    | RJ     | 89966809  |
| EDUARDO | ********                    | PR     | 88679978  |
| ANTONIO | ANTONIO@IG.COM              | SP     | 99655768  |
| ANTONIO | ANTONIO@UOL.COM             | PR     | 89955665  |
| ELAINE  | ELAINE@GLOBO.COM            | SP     | 77455786  |
| ELAINE  | ELAINE@GLOBO.COM            | SP     | 89766554  |
| CARMEM  | CARMEM@IG.COM               | RJ     | 77755785  |
| CARMEM  | CARMEM@IG.COM               | RJ     | 44522578  |
| ADRIANA | ADRIANA@GMAIL.COM           | RJ     | 44522578  |
| GIOVANA | ********                    | RJ     | 88587979  |
+---------+-----------------------------+--------+-----------+

SELECT 	C.NOME, 
		IFNULL(C.EMAIL, '********') AS E-MAIL, 
		E.ESTADO, 
		T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+---------+-------------------+--------+-----------+
| NOME    | EMAIL             | ESTADO | NUMERO    |
+---------+-------------------+--------+-----------+
| JORGE   | JORGE@IG.COM      | ES     | 789787987 |
| JORGE   | JORGE@IG.COM      | ES     | 789787987 |
| JORGE   | JORGE@IG.COM      | ES     | 545451211 |
| JOAO    | JOAO@IG.COM       | RJ     | 989898989 |
| JOAO    | JOAO@IG.COM       | RJ     | 554555455 |
| ANA     | ANA@IG.COM        | SP     | 878787211 |
| JOAO    | JOAO@IG.COM       | RJ     | 121212055 |
| ANA     | ANA@IG.COM        | SP     | 598989889 |
| JOAO    | JOAO@IG.COM       | RJ     | 212250540 |
| JORGE   | JORGE@IG.COM      | ES     | 787875421 |
| JORGE   | JORGE@IG.COM      | ES     | 545878785 |
| FLAVIO  | FLAVIO@IG.COM     | MG     | 68976565  |
| FLAVIO  | FLAVIO@IG.COM     | MG     | 99656675  |
| ANDRE   | ANDRE@GLOBO.COM   | RJ     | 33567765  |
| ANDRE   | ANDRE@GLOBO.COM   | RJ     | 88668786  |
| ANDRE   | ANDRE@GLOBO.COM   | RJ     | 55689654  |
| GIOVANA | ********          | RJ     | 88687979  |
| KARLA   | KARLA@GMAIL.COM   | RJ     | 88965676  |
| LORENA  | ********          | RJ     | 89966809  |
| EDUARDO | ********          | PR     | 88679978  |
| ANTONIO | ANTONIO@IG.COM    | SP     | 99655768  |
| ANTONIO | ANTONIO@UOL.COM   | PR     | 89955665  |
| ELAINE  | ELAINE@GLOBO.COM  | SP     | 77455786  |
| ELAINE  | ELAINE@GLOBO.COM  | SP     | 89766554  |
| CARMEM  | CARMEM@IG.COM     | RJ     | 77755785  |
| CARMEM  | CARMEM@IG.COM     | RJ     | 44522578  |
| ADRIANA | ADRIANA@GMAIL.COM | RJ     | 44522578  |
| GIOVANA | ********          | RJ     | 88587979  |
+---------+-------------------+--------+-----------+

/* VIEW = VISAO = PONTEIRO QUE APONTA PARA A QUERY*/

SELECT 	C.NOME,
		C.SEXO, 
		IFNULL (C.EMAIL, '******') AS 'E-MAIL', 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

CREATE VIEW RELATORIO AS
SELECT 	C.NOME,
		C.SEXO, 
		IFNULL (C.EMAIL, '******') AS 'E-MAIL', 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT * FROM RELATORIO;

SHOW TABLES;
SHOW DATABASES;
SHOW VIEW; -- NAO EXISTE

/* APAGANDO UMA VIEW */

DROP VIEW RELATORIO;

/* INSERINDO UM PREFIXO */

CREATE VIEW V_RELATORIO AS
SELECT 	C.NOME,
		C.SEXO, 
		IFNULL (C.EMAIL, '******') AS 'E-MAIL', 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

/* A VIEW FAZ PERDER UM POUQUINHO DE PERFORMANCE MAS GANHA PRODUTIVIDADE */
/* É UMA PERDA DE PERFORMACE JUSIFICAVEL JA QUE ALGUNS CASOS PRECISAMOS USAR A VIEW MESMO */

SELECT NOME, NUMERO, ESTADO
FROM V_RELATORIO;

/* IUD - INSERT, UPDATE, DELETE - DML NA VIEW */

INSERT INTO V_RELATORIO VALUES(
	'ANDREIA','F','ANDREIA@UOL.COM.BR','CEL','87354786','CENTRO','VITORIA', 'ES'
);

ERROR 1394 (HY000): Can not insert into join view 'comercio.v_relatorio' without fields list

DELETE FROM V_RELATORIO
WHERE NOME = 'JORGE';

ERROR 1395 (HY000): Can not delete from join view 'comercio.v_relatorio'

/* É PERMITIDO FAZER UPDATES EM VIEWS COM JOIN */
/* POREM, A TABELA ORIGINAL (CLIENTE) NAO VAI SER ALTERADA */
/* NAO É PERMITIDO FAZER INSERT NEM DELETE EM VIEWS COM JOINS */
/* NAO É INDICADO FAZER UPDATE EM VIEWS COM JOINS */

UPDATE V_RELATORIO
SET NOME ='JOSE'
WHERE NOME = 'JORGE';

CREATE TABLE JOGADORES(
	IDJOGADOR INT(1),
	NOME VARCHAR(30),
	ESTADO CHAR(2)
);

INSERT INTO JOGADORES VALUES(1,'GUERRERO', 'RS');
INSERT INTO JOGADORES VALUES(2,'GABIGOL','RJ');
INSERT INTO JOGADORES VALUES(3,'GANSOL','RJ');
INSERT INTO JOGADORES VALUES(4,'GABIGOL','RJ');
INSERT INTO JOGADORES VALUES(5,'GABIGOL','SP');

CREATE VIEW V_JOGADORES AS
SELECT NOME, ESTADO
FROM JOGADORES;

DELETE FROM V_JOGADORES
WHERE NOME = 'GUERRERO';

INSERT INTO JOGADORES VALUES(6,'GANSOL','RJ');

INSERT INTO V_JOGADORES VALUES('GUERRERO','RS');

SELECT * FROM JOGADORES;

/* É PERMITIDO FAZER OPERACOES DML EM VIEWS SEM JOINS */
/* POREM, É PRECISO TOMAR CUIDADO COM AS REGRAS DEFINIDAS AO CRIAR A TABELA */
/* NESSE CASO, A TABELA JOGADORES FICOU COM ID NULL PQ NAO COLOCAMOS NOT NULL AO CRIAR A TABELA*/
/* E INSERIMOS O DADO PELA VIEW*/

+-----------+----------+--------+
| IDJOGADOR | NOME     | ESTADO |
+-----------+----------+--------+
|         2 | GABIGOL  | RJ     |
|         3 | GABIGOL  | RJ     |
|         4 | GABIGOL  | RJ     |
|         5 | GABIGOL  | SP     |
|         6 | GANSOL   | RJ     |
|      NULL | GUERRERO | RS     |
+-----------+----------+--------+

SELECT * FROM V_RELATORIO
WHERE SEXO = 'F';

/* ORDER BY */

/* A UNICA FORMA DE ORDENAR UMA TABELA É UTILIZANDO O COMANDO ORDER BY */
/* SEM ELE, O RESULTADO É ALEATÓRIO */

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);

INSERT INTO ALUNOS VALUES(1,'JOAO');
INSERT INTO ALUNOS VALUES(1,'MARIA');
INSERT INTO ALUNOS VALUES(2,'ZOE');
INSERT INTO ALUNOS VALUES(2,'ANDRE');
INSERT INTO ALUNOS VALUES(3,'CLARA');
INSERT INTO ALUNOS VALUES(4,'MAFRA');
INSERT INTO ALUNOS VALUES(5,'JANAINA');
INSERT INTO ALUNOS VALUES(1,'JANAINA');
INSERT INTO ALUNOS VALUES(3,'MARCELO');
INSERT INTO ALUNOS VALUES(4,'GIOVANI');
INSERT INTO ALUNOS VALUES(5,'ANTONIO');
INSERT INTO ALUNOS VALUES(6,'ANA');
INSERT INTO ALUNOS VALUES(6,'VIVIANE');

SELECT * FROM ALUNOS
ORDER BY NUMERO; /* NOME DA COLUNA */

SELECT * FROM ALUNOS
ORDER BY 1; /* NUMERO DA COLUNA */

SELECT * FROM ALUNOS
ORDER BY 2; /* NUMERO DA COLUNA */

/* ORDENANDO POR MAIS DE UMA COLUNA */

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY NUMERO, NOME;

SELECT * FROM ALUNOS
ORDER BY 1,2;

/* MESCLANDO ORDER BY COM PROJECAO */

SELECT NOME FROM ALUNOS --ERROR 1054 (42S22): Unknown column '2' in 'order clause'
ORDER BY 1,2;

SELECT NOME FROM ALUNOS
ORDER BY NUMERO, NOME; --FUNCIONA AINDA QUE O SELECT NAO TENHA O NUMERO

/* ORDER BY DESC / ASC */

SELECT * FROM ALUNOS
ORDER BY 1 ASC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC;

SELECT * FROM ALUNOS
ORDER BY 1,2 DESC; --NUMERO ASC E NOME DESC

SELECT * FROM ALUNOS
ORDER BY 1,2 DESC; ---NUMERO DESC E NOME DESC

/* ORDENANDO COM JOINS */

SELECT 	C.NOME,
		C.SEXO, 
		IFNULL (C.EMAIL, '******') AS 'E-MAIL', 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1;

SHOW TABLES;

SELECT * FROM V_RELATORIO
ORDER BY 1;

/* NOTACAO 	

	PETER CHEN - PROGRAMA BRMODELO
	1 = 1
	0 = 0
	N = MUITOS

	CROSS - PROGRAMA STARUML
	UMA LINHA = 1
	PÉ DE GALINHA = MUITOS
*/

/* ; = DELIMITADOR = DELIMITER */

SELECT 	C.NOME,
		C.SEXO, 
		IFNULL (C.EMAIL, '******') AS 'E-MAIL', 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1

STATUS --NAO PRECISA DO ; PQ NAO É UM COMANDO SQL E SIM DE INFRAESTRUTURA

DELIMITER $ --SE QUISER MUDAR O DELIMITADOR PARA $ (O MYSQL NAO CONSIDERA ESPACO EM DELIMITER)

SELECT * FROM V_RELATORIO; /* IGNORA O ; PQ O DELIMITER FOI ALTERADO PARA $ */

DELIMITER ;

/* STORED PROCEDURES */

/* BLOCOS DE PROGRAMACOES QUE FICAM ARMAZENADOS NO BANCO */

SELECT 'MAFRA'; /* BLOCO ANONIMO */

SELECT 2 * 2 AS 'MULT';

/* ALTERAR O DELIMITER É NECESSÁRIO PARA QUE O BANCO NÃO PARE NO MEIO
DA LEITURA DE UMA PROCEDURE */

/* PROCEDURE É UM BLOCO NOMEADO */

DELIMITER $

CREATE PROCEDURE NOME()
BEGIN

	QUALQUER PROGRAMACAO;

END
$

DELIMITER $

CREATE PROCEDURE NOME_EMPRESA()
BEGIN
	
	SELECT 'UNIVERSIDADE DOS DADOS' AS EMPRESA;

END
$

/* CHAMANDO A PROCEDURE*/

CALL NOME_EMPRESA()$

DELIMITER ;

CALL NOME_EMPRESA();

/* PROCEDURES COM PARAMETROS */

SELECT 10 + 10 AS 'SOMA';

DELIMITER $

CREATE PROCEDURE CONTA()
BEGIN
	
	SELECT 10 + 10 AS 'SOMA';

END
$

DELIMITER ;

CALL SOMA();

DROP PROCEDURE SOMA;

DELIMITER $

CREATE PROCEDURE CONTA(NUMERO1 INT, NUMERO2 INT)
BEGIN
	
	SELECT NUMERO1 + NUMERO2 AS 'SOMA';

END
$

DELIMITER ;

CALL CONTA(100,50);
CALL CONTA(1020,500);
CALL CONTA(10000,55550);
CALL CONTA(1000,5000);
CALL CONTA(100,40);

/* Recap */

CREATE DATABASE MAFRA;

USE MAFRA;

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);

DROP DATABASE MAFRA;

/* PROCEDURES */

CREATE DATABASE PROJ;

/* NO MYSQL NAO ACEITA ESPACO NO NOME DAS COLUNAS */
/* NO SQL SERVER ACEITA MAS NAO É UMA BOA PRATICA*/

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	HORAS INT(3) NOT NULL,
	VALOR FLOAT(10,2) NOT NULL
);

SHOW TABLES;

INSERT INTO CURSOS VALUES(NULL, 'JAVA', 30, 500.00);
INSERT INTO CURSOS VALUES(NULL, 'FUNDAMENTOS DE BANCO DE DADOS', 40, 700.00);

DELIMITER #

STATUS

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30), 
						   P_HORAS INT(3), 
						   P_PRECO FLOAT(10,2))
BEGIN

	INSERT INTO CURSOS VALUES(NULL, P_NOME, P_HORAS, P_PRECO);

END
#

DELIMITER ;

CALL CAD_CURSO('CSHARP', 50, 900.00);
CALL CAD_CURSO('BI SQL SERVER',35,3000.00);
CALL CAD_CURSO('POWER BI', 20,1000.00);
CALL CAD_CURSO('TABLEAU',30,1200.00);
CALL CAD_CURSO('DEVOPS',15,2000.00);
CALL CAD_CURSO('INTELIGENCIA ARTIFICIAL',40,3500.00);
CALL CAD_CURSO('TESTER QA',25,2200.00);
CALL CAD_CURSO('ENGENHEIRO DE DADOS',32,3300.00);
CALL CAD_CURSO('EXCEL AVANCADO',42,4000.00);
CALL CAD_CURSO('DBA ORACLE',58,6000.00);
CALL CAD_CURSO('DBA POSTGRES',50,4200.00);
CALL CAD_CURSO('ANALISTA DE DADOS',28,2800.00);
CALL CAD_CURSO('CIENTISTA DE DADOS',37,3550.00);

/* CRIAR UMA PROCEDURE PARA CONSULTAR CURSOS */

DELIMITER $

STATUS

CREATE PROCEDURE CONSULT_CURSO(P_NOME VARCHAR(30))
BEGIN
	SELECT * FROM CURSOS
	WHERE NOME = P_NOME; 
END
$

DELIMITER ;

CALL CONSULT_CURSO('CSHARP');

/* FUNCOES DE AGREGACAO NUMERICAS*/

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	JANEIRO FLOAT(10,2),
	FEVEREIRO FLOAT(10,2),
	MARCO FLOAT(10,2)
);

INSERT INTO VENDEDORES VALUES(NULL,'CARLOS','M',76234.78,88346.87,5756.90);
INSERT INTO VENDEDORES VALUES(NULL,'MARIA','F',5865.78,6768.87,4467.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO','M',78769.78,6685.87,6664.90);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA','F',5779.78,446886.87,8965.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANDERSON','M',676545.78,77544.87,578665.90);
INSERT INTO VENDEDORES VALUES(NULL,'IVONE','F',57789.78,44774.87,68665.90);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO','M',4785.78,66478.87,6887.90);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA','F',89667.78,57654.87,5755.90);

/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;

/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;


/* AVG - TRAZ A MEDIADE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MEDIA_FEV
FROM VENDEDORES;

/* VARIAS FUNCOES */

SELECT MAX(JANEIRO) AS MAX_JAN,
	MIN(JANEIRO) AS MIN_JAN,
	AVG(JANEIRO) AS MEDIA_JAN
	FROM VENDEDORES;

/* TRUNCATE - 2 PARAMETROS, A MEDIA E O NUM DE CASAS DEC */

SELECT MAX(JANEIRO) AS MAX_JAN,
	MIN(JANEIRO) AS MIN_JAN,
	TRUNCATE(AVG(JANEIRO),2) AS MEDIA_JAN
	FROM VENDEDORES;

/* AGREGANDO COM SUM() - SOMA COLUNA */

SELECT SUM(JANEIRO) AS TOTAL_JAN,
	   SUM(FEVEREIRO) AS TOTAL_FEV,
	   SUM(MARCO) AS TOTAL_MAR
FROM VENDEDORES;

SELECT SEXO,
	   SUM(JANEIRO) AS TOTAL_JAN,
	   SUM(FEVEREIRO) AS TOTAL_FEV,
	   SUM(MARCO) AS TOTAL_MAR
FROM VENDEDORES
GROUP BY SEXO;


/* SUBQUERIES*/


/* VENDEDOR QUE VENDEU MENOS EM MARCO E O SEU NOME */

SELECT * FROM VENDEDORES;

SELECT MIN(MARCO) FROM VENDEDORES;

SELECT NOME, MARCO
FROM VENDEDORES
WHERE MARCO = (SELECT MIN(MARCO) FROM VENDEDORES);

/* VENDEDOR QUE VENDEU MENOS EM MARCO E O SEU NOME */

SELECT NOME, MARCO
FROM VENDEDORES
WHERE MARCO = (SELECT MAX(MARCO) FROM VENDEDORES);

/* VENDEDOR QUE VENDEU MAIS QUE A MEDIA DE MAR */

SELECT TRUNCATE(AVG(MARCO),2) AS MEDIA_MAR 
FROM VENDEDORES;

SELECT NOME, MARCO
FROM VENDEDORES
WHERE MARCO > (SELECT AVG(MARCO) FROM VENDEDORES);

/* VENDEDOR QUE VENDEU MAIS QUE A MEDIA DE FEV */

SELECT TRUNCATE(AVG(FEVEREIRO),2) AS MEDIA_FEV 
FROM VENDEDORES;

SELECT NOME, FEVEREIRO
FROM VENDEDORES
WHERE FEVEREIRO > (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

/* VENDEDOR QUE VENDEU MENOS QUE A MEDIA DE FEV */

SELECT NOME, FEVEREIRO
FROM VENDEDORES
WHERE FEVEREIRO < (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

/* OPERACOES EM LINHA */

SELECT * FROM VENDEDORES;

SELECT NOME,
	   JANEIRO,
	   FEVEREIRO,
	   MARCO,
	   (JANEIRO + FEVEREIRO + MARCO) AS 'TOTAL',
	   TRUNCATE((JANEIRO + FEVEREIRO + MARCO)/3,2) AS 'MEDIA'
	   FROM VENDEDORES;

/* APLICANDO UM % */

SELECT NOME,
	   JANEIRO,
	   FEVEREIRO,
	   MARCO,
	   (JANEIRO + FEVEREIRO + MARCO) AS 'TOTAL',
	   (JANEIRO + FEVEREIRO + MARCO) * .25 AS 'DESCONTO',
	   TRUNCATE((JANEIRO + FEVEREIRO + MARCO)/3,2) AS 'MEDIA'	   
	   FROM VENDEDORES;

/* ALTERAR TABELAS */

CREATE TABLE TABELA(
	COLUNA1 VARCHAR(30),
	COLUNA2 VARCHAR(30),
	COLUNA3 VARCHAR(30)
);

--ADICIONANDO UM PK

-- ASSIM NAO TEM COMO COLOCAR O AUTO_INCREMENT NA PK
ALTER TABLE TABELA
ADD PRIMARY KEY(COLUNA1);

--ADICIONANDO COLUNA SEM POSICAO. ULTIMA POSICAO
ALTER TABLE TABELA
ADD COLUNA VARCHAR(30);

ALTER TABLE TABELA
ADD COLUNA100 INT;

--ADICIONANDO UMA COLUNA COM POSICAO

ALTER TABLE TABELA
ADD COLUMN COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;


--ADICIONANDO O TIPO DE UM CAMPO
ALTER TABLE TABELA
MODIFY COLUNA2 DATE NOT NULL;

--RENOMEANDO O NOME DA TABELA
ALTER TABLE TABELA
RENAME PESSOA;

CREATE TABLE TIME(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	TIME VARCHAR(30)
);

--FOREIGN KEY
ALTER TABLE TIME
ADD FOREIGN KEY (ID_PESSOA)
REFERENCES PESSOA(COLUNA1);

/* VERIFICAR AS CHAVES */
SHOW CREATE TABLE TIME;

/* ORGANIZANDO AS CHAVES - CONSTRAINT (REGRA) */ /* INTEGRIDADE REFERENCIAL*/

CREATE TABLE JOGADOR(
	IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30)
);

ALTER TABLE TIME
ADD ID_JOGADOR INT;

ALTER TABLE TIME
ADD FOREIGN KEY (ID_JOGADOR)
REFERENCES JOGADOR(IDJOGADOR);

INSERT INTO JOGADOR VALUES(NULL, 'GUERRERO');
INSERT INTO TIME VALUES(NULL, 'FLAMENGO',1);

SHOW CREATE TABLE JOGADOR;
SHOW CREATE TABLE TIME;

/* O IDEAL É CRIAR AS CHAVES PK E FK FORA DA CRIACAO DAS TABELAS
PQ AI PODEMOS NOMEAR AS CONSTRAINTS DA FORMA QUE GOSTARIAMOS*/

SHOW TABLES;

DROP TABLE ENDERECO;
DROP TABLE TELEFONE;
DROP TABLE CLIENTE;

CREATE TABLE CLIENTE(
	IDCLIENTE INT,
	NOME VARCHAR(30) NOT NULL
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT,
	TIPO CHAR(3) NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT 
);

/* PRIMEIRO CRIO AS TABELAS SEM DEPENDENCIA ALGUMA
DEPOIS VOU ADICIONANDO AS CONSTRAINTS (REGRAS)*/

ALTER TABLE CLIENTE
ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY(IDCLIENTE);

ALTER TABLE TELEFONE
ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE)
REFERENCES CLIENTE(IDCLIENTE);

SHOW CREATE TABLE TELEFONE;

/* DICIONARIO DE DADOS - GUARDA O METADADO (OS DADOS DO DADO)
DATA DE CRIACAO DAS TABELAS, TODAS AS INFORMACOES SOBRE OS DADOS DO BD*/

SHOW DATABASES;

USE INFORMATION_SCHEMA;

STATUS

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_SCHEMA AS "BANCO",
	   TABLE_NAME AS "TABELA",
	   CONSTRAINT_NAME AS "NOME REGRA",
	   CONSTRAINT_TYPE AS "TIPO"
	   FROM TABLE_CONSTRAINTS
	   WHERE CONSTRAINT_SCHEMA = 'COMERCIO';

/* APAGANDO CONSTRAINTS*/

ALTER TABLE TELEFONE
DROP FOREIGN KEY FK_CLIENTE_TELEFONE; 

/* ACOES DE CONSTRAINTS */




/*
	DCL - DATA CONTROL LANGUAGE = CONTROLE DE ACESSO DOS DADOS

	TCL - TRANSACTION CONTROL LANGUAGE = CONTROLE DE TRANSACAO = ATOMICIDADE DO BANCO
*/



