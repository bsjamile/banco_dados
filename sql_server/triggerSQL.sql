/* TRIGGERS */

/* BEFORE - AFTER */

/* INSERT
   DELETE
   UPDATE
*/

CREATE TABLE PRODUTOS(
	IDPRODUTO INT IDENTITY PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL,
	CATEGORIA VARCHAR(30) NOT NULL,
	PRECO NUMERIC(10,2) NOT NULL
)
GO

CREATE TABLE HISTORICO(
	IDOPERACAO INT PRIMARY KEY IDENTITY,
	PRODUTO VARCHAR(50) NOT NULL,
	CATEGORIA VARCHAR(30) NOT NULL,
	PRECOANTIGO NUMERIC(10,2) NOT NULL,
	PRECONOVO NUMERIC(10,2) NOT NULL,
	DATA DATETIME,
	USUARIO VARCHAR(30),
	MENSAGEM VARCHAR(100)
)
GO

INSERT INTO PRODUTOS VALUES('LIVRO SQL SERVER','LIVROS',98.00)
INSERT INTO PRODUTOS VALUES('LIVRO ORACLE','LIVROS',50.00)
INSERT INTO PRODUTOS VALUES('LICENÇA POWERCENTER','SOFTWARES',450000.00)
INSERT INTO PRODUTOS VALUES('NOTEBOOK I7','COMPUTADORES',150.00)
INSERT INTO PRODUTOS VALUES('LIVRO BUSINESS INTELLIGENCE','LIVROS',90.00)
GO

SELECT * FROM PRODUTOS
GO
SELECT * FROM HISTORICO
GO

/* VERIFICANDO O USUARIO DO BANCO */

SELECT SUSER_NAME()
GO

/* TRIGGER DE DADOS - DATA MANIPULATION LANGUAGE */

CREATE TRIGGER TRG_ATUALIZA_PRECO
ON DBO.PRODUTOS
FOR UPDATE
AS
		DECLARE @IDPRODUTO INT
		DECLARE @PRODUTO VARCHAR(30)
		DECLARE @CATEGORIA VARCHAR(10)
		DECLARE @PRECO NUMERIC(10,2)
		DECLARE @PRECONOVO NUMERIC(10,2)
		DECLARE @DATA DATETIME
		DECLARE @USUARIO VARCHAR(30)
		DECLARE @ACAO VARCHAR(100)

		--PRIMEIRO BLOCO
		/* BOA PRATICA = VALORES VIDOS DE TABELAS SAO INSERIDOS COM COMANDO SELECT */
		SELECT @IDPRODUTO = IDPRODUTO FROM inserted
		SELECT @PRODUTO = NOME FROM inserted
		SELECT @CATEGORIA = CATEGORIA FROM inserted
		SELECT @PRECO = PRECO FROM deleted
		SELECT @PRECONOVO = PRECO FROM inserted

		--SEGUNDO BLOCO
		/* VALORES VINDOS DE FUNCOES OU VALORERS LITERAIS 
		   DEVEM SER ATRIBUIDOS COM O COMANDO SET*/
		SET @DATA = GETDATE()
		SET @USUARIO = SUSER_NAME()
		SET @ACAO = 'VALOR INSERIDO PELA TRIGGER TRG_ATUALIZADA_PRECO'

		INSERT INTO HISTORICO
		(PRODUTO,CATEGORIA,PRECOANTIGO,PRECONOVO,DATA,USUARIO,MENSAGEM)
		VALUES
		(@PRODUTO,@CATEGORIA,@PRECO,@PRECONOVO,@DATA,@USUARIO,@ACAO)

		PRINT 'TRIGGER EXECUTADA COM SUCESSO'
GO

/* EXECUTANDO UM UPDATE */

UPDATE PRODUTOS SET PRECO = 100.00
WHERE IDPRODUTO = 1
GO

SELECT * FROM PRODUTOS
SELECT * FROM HISTORICO
GO

UPDATE PRODUTOS SET NOME = 'LIVRO C#'
WHERE IDPRODUTO = 1
GO

/* PROGRAMANDO TRIGGER EM UMA COLUNA */

DROP TRIGGER TRG_ATUALIZA_PRECO
GO

CREATE TRIGGER TRG_ATUALIZA_PRECO
ON DBO.PRODUTOS
FOR UPDATE AS
IF UPDATE(PRECO)
BEGIN
		DECLARE @IDPRODUTO INT
		DECLARE @PRODUTO VARCHAR(30)
		DECLARE @CATEGORIA VARCHAR(10)
		DECLARE @PRECO NUMERIC(10,2)
		DECLARE @PRECONOVO NUMERIC(10,2)
		DECLARE @DATA DATETIME
		DECLARE @USUARIO VARCHAR(30)
		DECLARE @ACAO VARCHAR(100)

		--PRIMEIRO BLOCO
		/* BOA PRATICA = VALORES VIDOS DE TABELAS SAO INSERIDOS COM COMANDO SELECT */
		SELECT @IDPRODUTO = IDPRODUTO FROM inserted
		SELECT @PRODUTO = NOME FROM inserted
		SELECT @CATEGORIA = CATEGORIA FROM inserted
		SELECT @PRECO = PRECO FROM deleted
		SELECT @PRECONOVO = PRECO FROM inserted

		--SEGUNDO BLOCO
		/* VALORES VINDOS DE FUNCOES OU VALORERS LITERAIS 
		   DEVEM SER ATRIBUIDOS COM O COMANDO SET*/
		SET @DATA = GETDATE()
		SET @USUARIO = SUSER_NAME()
		SET @ACAO = 'VALOR INSERIDO PELA TRIGGER TRG_ATUALIZADA_PRECO'

		INSERT INTO HISTORICO
		(PRODUTO,CATEGORIA,PRECOANTIGO,PRECONOVO,DATA,USUARIO,MENSAGEM)
		VALUES
		(@PRODUTO,@CATEGORIA,@PRECO,@PRECONOVO,@DATA,@USUARIO,@ACAO)

		PRINT 'TRIGGER EXECUTADA COM SUCESSO'
END
GO

UPDATE PRODUTOS SET PRECO = 300.00
WHERE IDPRODUTO = 2
GO

SELECT * FROM PRODUTOS
SELECT * FROM HISTORICO
GO

UPDATE PRODUTOS SET NOME = 'LICENÇA POWERSUPERCENTER'
WHERE IDPRODUTO = 3
GO

/* VARIAVEIS COM SELECT */

SELECT 10 + 10 AS 'SOMA'
GO

CREATE TABLE RESULTADO(
	IDRESULTADO INT PRIMARY KEY IDENTITY,
	RESULTADO INT
)
GO

INSERT INTO RESULTADO VALUES((SELECT 10+10))
GO

/* ATRIBUINDO SELECTS A VARIAVEIS - BLOCO ANONIMO
   SO VAI SER EXECUTADO UMA VEZ E NAO VAI SER ARMAZENADO EM BANCO*/

DECLARE
		@RESULTADO INT
		SET @RESULTADO = (SELECT 50+50)
		INSERT INTO RESULTADO VALUES(@RESULTADO)
		GO

SELECT * FROM RESULTADO
GO 

DECLARE
		@RESULTADO INT
		SET @RESULTADO = (SELECT 50+50)
		INSERT INTO RESULTADO VALUES(@RESULTADO)
		PRINT 'VALOR INSERIDO NA TABELAA: ' + CAST(@RESULTADO AS VARCHAR)
		GO

/* TRIGGER UPDATE */

CREATE TABLE EMPREGADO(
	IDEMP INT PRIMARY KEY,
	NOME VARCHAR(30),
	SALARIO MONEY, --JA VEM COM 2 CASAS POR PADRAO
	IDGERENTE INT
)
GO

ALTER TABLE EMPREGADO ADD CONSTRAINT FK_GERENTE
FOREIGN KEY(IDGERENTE) REFERENCES EMPREGADO(IDEMP)
GO

INSERT INTO EMPREGADO VALUES(1,'CLARA',5000.00, NULL)
INSERT INTO EMPREGADO VALUES(2,'CELIA',4000.00, 1)
INSERT INTO EMPREGADO VALUES(3,'JOAO',4000.00, 1)

SELECT * FROM EMPREGADO
GO

CREATE TABLE HIST_SALARIO(
	IDEMPREGADO INT,
	NOMEEMPREGADO VARCHAR(50),
	ANTIGOSALARIO MONEY,
	NOVOSALARIO MONEY,
	DATA DATETIME
)
GO

CREATE TRIGGER TRG_SALARIO
ON DBO.EMPREGADO
FOR UPDATE AS 
IF UPDATE(SALARIO)
BEGIN
		INSERT INTO HIST_SALARIO
		(IDEMPREGADO,ANTIGOSALARIO,NOVOSALARIO,DATA)
		SELECT D.IDEMP,D.SALARIO,I.SALARIO,GETDATE()
		FROM DELETED D, INSERTED I
		WHERE D.IDEMP = I.IDEMP
END
GO

SELECT * FROM EMPREGADO
GO

UPDATE EMPREGADO SET SALARIO = SALARIO * 1.1
GO

SELECT * FROM HIST_SALARIO
GO

ALTER TABLE HIST_SALARIO
ADD NOMEEMPREGADO VARCHAR(50) NOT NULL
GO


DROP TRIGGER TRG_SALARIO
GO

DROP TABLE HIST_SALARIO
GO

CREATE TRIGGER TRG_SALARIO
ON DBO.EMPREGADO
FOR UPDATE AS 
IF UPDATE(SALARIO)
BEGIN
		INSERT INTO HIST_SALARIO
		(IDEMPREGADO,NOMEEMPREGADO,ANTIGOSALARIO,NOVOSALARIO,DATA)
		SELECT D.IDEMP,D.NOME,D.SALARIO,I.SALARIO,GETDATE()
		FROM DELETED D, INSERTED I
		WHERE D.IDEMP = I.IDEMP
END
GO

SELECT * FROM EMPREGADO
GO

SELECT * FROM HIST_SALARIO
GO